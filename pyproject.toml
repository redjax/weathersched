[project]
name = "weathersched"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [{ name = "redjax", email = "jackenyon@gmail.com" }]
requires-python = ">=3.11"
dependencies = [
    "alembic>=1.13.3",
    "celery>=5.4.0",
    "dynaconf>=3.2.6",
    "hishel>=0.0.33",
    "httpx>=0.27.2",
    "pandas>=2.2.3",
    "psycopg2-binary>=2.9.10",
    "pyarrow>=18.0.0",
    "pydantic>=2.9.2",
    "redis>=5.2.0",
    "sqlalchemy>=2.0.36",
]

[project.scripts]
weathersched = "weathersched:main"

## Fix 'error: Multiple top-level packages discovered in flat-layout'
#  https://github.com/pypa/setuptools/issues/3197#issuecomment-1078770109
[tool.setuptools]
py-modules = ["weathersched"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = ["nox>=2024.10.9", "pytest-xdist>=3.6.1", "ruff>=0.7.2"]

[tool.pytest.ini_options]
filterwarnings = ["error", "ignore::UserWarning"]
testpaths = ["tests"]

# Filter unregistered marks. Suppresses all UserWarning
# messages, and converts all other errors/warnings to errors.
[tool.ruff.lint]
select = [
    "D",    # pydocstyle
    "E",    # pycodestyle
    "F401", # remove unused imports
    "I",    # isort
    "I001", # Unused imports
]
ignore = [
    "D100", # missing-docstring-in-public-module
    "D101", # missing-docstring-in-public-class
    "D102", # missing-docstring-in-public-method
    "D103", # Missing docstring in public function
    "D105", # Missing docstring in magic method
    "D106", # missing-docstring-in-public-nested-class
    "D107", # Missing docstring in __init__
    "D200", # One-line docstring should fit on one line
    "D203", # one-blank-line-before-class
    "D205", # 1 blank line required between summary line and description
    "D213", # multi-line-summary-second-line
    "D401", # First line of docstring should be in imperative mood
    "E402", # Module level import not at top of file
    "D406", # Section name should end with a newline
    "D407", # Missing dashed underline after section
    "D414", # Section has no content
    "D417", # Missing argument descriptions in the docstring for [variables]
    "E501", # Line too long
    "E722", # Do not use bare `except`
    "F401", # imported but unused
]
fixable = [
    "C",
    "D",    # pydocstyle
    "E",    # pycodestyle-error
    "E402", # Module level import not at top of file
    "F401", # unused imports
    "I",    # isort
    "N",    # pep8-naming
    "T",
    "W",    # pycodestyle-warning
    "ERA",  # eradicate
    "PL",   # pylint
    "RUF",  # ruf-specific rules
    "TID",  # flake8-tidy-imports
    "TRY",  # tryceratops
    "UP",   # pyupgrade
]

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".ruff_cache",
    ".venv",
    "__pypackages__",
    "__pycache__",
    "*.pyc",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["D104"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.isort]
combine-as-imports = true
force-sort-within-sections = true
force-wrap-aliases = true
lines-after-imports = 1
order-by-type = true
relative-imports-order = "closest-to-furthest"
required-imports = ["from __future__ import annotations"]
section-order = [
    "future",
    "standard-library",
    "first-party",
    "local-folder",
    "third-party",
]
